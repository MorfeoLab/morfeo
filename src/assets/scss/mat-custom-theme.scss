@use '~@angular/material' as mat;
/*
 * TEMA PRINCIPALE
 */
$material-theme-mrf-primary: mat.define-palette(mat.$blue-palette, 300, 100, 500);
$material-theme-mrf-accent: mat.define-palette(mat.$pink-palette, 700, 400, 900);
$material-theme-mrf-warn: mat.define-palette(mat.$deep-orange-palette, 500, 300, 700);

@mixin card-header-underline($color-set, $amount: 500) {
  $bg-color: map_get($color-set, $amount);
  .mat-card {
    .mat-card-header {
      border: {
        bottom: {
          color: $bg-color;
          width: 3px;
          style: solid;
        }
      }
    }
  }
}

@mixin boxed-fieldset($color-set, $amount: 500) {
  fieldset.boxed {
    padding: 1em;
    border-top: 1px solid map_get($color-set, $amount);

    legend {
      padding: 0.2em 0.5em;
      color: map_get($color-set, $amount);
    }
  }
}

@mixin sticky-background($theme) {
  .sticky > div {
    $background: map-get($theme, background);
    background: mat.get-color-from-palette($background, card);
  }
}

@mixin list-badge($theme) {
  span.list-badge > span {
    @include _mat-toolbar-color(map-get($theme, primary));

    &.primary {
      @include _mat-toolbar-color(map-get($theme, primary));
    }
    &.warn {
      @include _mat-toolbar-color(map-get($theme, warn));
    }
    &.accent {
      @include _mat-toolbar-color(map-get($theme, accent));
    }
  }
}



@function mat-custom-theme(
  $primary,
  $accent,
  $warn: mat.define-palette(mat.$red-palette),
  $is-dark: false,
  $foreground: mat.$light-theme-foreground-palette,
  $background: mat.$light-theme-background-palette
) {
  @return (
    primary: $primary,
    accent: $accent,
    warn: $warn,
    is-dark: $is-dark,
    foreground: $foreground,
    background: $background,
  );
}
